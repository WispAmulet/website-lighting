mixin productForm(product = {})
  form.add__form(action=`/add-product/${product._id || ''}` method="POST" enctype="multipart/form-data")
    label(for="type")
      | Type&nbsp;
      span (Required)
    - const choices = ['LED Corn Light', 'LED Garden Light', 'LED Retrofit Kit', 'Smart LED']
    - const type = product.type || ''
    .types
      each choice in choices
        .type
          input(type="radio" id=choice value=choice name="type" checked=(type.includes(choice)) required)
          label(for=choice) #{choice}
    //- Product details
    h3 Product Details
    label(for="name")
      | Name&nbsp;
      span (Required)
    input#name(type="text" name="name" value=product.name required)
    label(for="voltage") Voltage
    input#voltage(type="text" name="voltage" value=product.voltage)
    label(for="ip_rate") IP Rate
    input#ip_rate(type="text" name="ip_rate" value=product.ip_rate placeholder="40")
    label(for="cri") CRI
    input#cri(type="text" name="cri" value=product.cri placeholder="> 80")
    label(for="lifespan") Lifespan
    input#lifespan(type="text" name="lifespan" value=product.lifespan)
    label(for="application") Application
    input#application(type="text" name="application" value=product.application)
    label(for="color_temperature") Color Temperature
    - const colorTemperatureChoices = ['3000K', '4000K', '5000K', '6000K']
    - const colorTemperatures = product.color_temperatures || []
    .types
      each choice in colorTemperatureChoices
        .type
          input(type="checkbox" id=choice value=choice name="color_temperatures" checked=(colorTemperatures.includes(choice)))
          label(for=choice) #{choice}
    label(for="certificate") Certificate
    - const certificateChoices = ['UL', 'DLC', 'TUV', 'ETL', 'CE', 'RoHS']
    - const certificates = product.certificates || []
    .types
      each choice in certificateChoices
        .type
          input(type="checkbox" id=choice value=choice name="certificates" checked=(certificates.includes(choice)))
          label(for=choice) #{choice}
    //- Specifications
    h3 Specifications
    - let l = 0
    - const model_no = product.model_no || []
    - const power = product.power || []
    - const base_type = product.base_type || []
    - const lumen = product.lumen || []
    - const dim_width = product.dim_width || []
    - const dim_height = product.dim_height || []
    - const dim_depth = product.dim_depth || []
    - const ctn_size_width = product.ctn_size_width || []
    - const ctn_size_height = product.ctn_size_height || []
    - const ctn_size_depth = product.ctn_size_depth || []
    - const ctn_quantity = product.ctn_quantity || []
    - const ctn_weight = product.ctn_weight || []
    - const length = model_no.length
      while l < length
        .form-specification
          button.form__remove(onClick="this.parentElement.remove()") &times;
          label(for="model_no") Model No.
          input#model_no(type="text" name="model_no" value=model_no[l])
          label(for="power") Power (W)
          input#power(type="text" name="power" value=power[l])
          label(for="base_type") Base Type
          input#base_type(type="text" name="base_type" value=base_type[l])
          label(for="lumen") Lumens (LM)
          input#lumen(type="text" name="lumen" value=lumen[l])
          label(for="dim_width") Width (in)
          input#dim_width(type="text" name="dim_width" value=dim_width[l])
          label(for="dim_height") Height (in)
          input#dim_height(type="text" name="dim_height" value=dim_height[l])
          label(for="dim_depth") Depth (in)
          input#dim_depth(type="text" name="dim_depth" value=dim_depth[l])
          label(for="ctn_size_depth_width") CTN Width (in)
          input#ctn_size_width(type="text" name="ctn_size_width" value=ctn_size_width[l])
          label(for="ctn_size_height") CTN Height (in)
          input#ctn_size_height(type="text" name="ctn_size_height" value=ctn_size_height[l])
          label(for="ctn_size_depth") CTN Depth (in)
          input#ctn_size_depth(type="text" name="ctn_size_depth" value=ctn_size_depth[l])
          label(for="ctn_quantity") CTN Quantity (pcs)
          input#ctn_quantity(type="text" name="ctn_quantity" value=ctn_quantity[l])
          label(for="ctn_weight") CTN Weight (lbs)
          input#ctn_weight(type="text" name="ctn_weight" value=ctn_weight[l])
          - l++
    input#add-specification.button(type="button" value="Add An Specification")
    //- Bullet points
    h3 Bullet Points
    - let b = 0
    - const bulletPoints = product.bullet_points || []
      while b < bulletPoints.length
        .form-bullet-point
          button.form__remove(onClick="this.parentElement.remove()") &times;
          label(for="bullet_point") Description
          input(type="text" name="bullet_points" value=bulletPoints[b])
          - b++
    input#add-bullet-point.button(type="button" value="Add An Bullet Point")
    //- Photos
    h3 Photos
    - let p = 0
    - const photos = product.photos || []
    - const descriptions = product.descriptions || []
      while p < photos.length
        .form-photo
          button.form__remove(onClick="this.parentElement.remove()") &times;
          label(for="photo") Photo
          input(type="file" name="photos" accept="image/gif, image/png, image/jpeg")
          img(src=`/uploads/products/${photos[p].thumbnail}`, alt=`${descriptions[p]}`)
          label(for=description) Description
          input(type="text" name="descriptions" value=descriptions[p])
          - p++
    input#add-photo.button(type="button" value="Add An Photo")
    //- Brochure
    h3 Brochure
    label(for="brochure")
      | Brochure&nbsp;
      span (Recommended)
    input#brochure(type="file" name="brochure" accept=".pdf")
    p= product.brochure
    input.button(type="submit" value="Save")
